version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true
    environment:
      APACHE24_VERSION: 2.4.34-3
      CURL_VERSION: 7.61.0-1
      POSTGRESQL_VERSION: 9.6.9-2
      SODIUM_VERSION: 1.0.16-1
      ARGON2_VERSION: 20161029-2
      PHP_VERSION: 7.2.9-2
      BINTRAY_REPO: php72custom
      PACKAGE_VCS_URL: https://github.com/aursu/rpmbuild-php-7.2
    steps:
      - run:
          name: Upgrade Docker CE
          command: |
            sudo apt-get update
            sudo apt-get install docker-ce=18.03.1~ce-0~ubuntu
      - run:
          name: Upgrade Docker Compose
          command: |
            sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Create Build User/Group
          command: |
            if getent group centos; then
              sudo groupmod -o -g 48 centos
            else
              sudo groupadd -o -g 48 centos
            fi

            if getent passwd centos; then
              sudo usermod -o -u 48 -g centos centos
            else
              sudo useradd -o -u 48 -g centos -M -d /var/www/html centos
            fi
      - checkout
      - run:
          name: Git submodules sync
          command: |
            git submodule sync
            git submodule update --init
      - run:
          name: Start docker services for rpmbuild
          command: |
            docker-compose -f rpmbuild/docker-compose.yml pull
            docker-compose -f rpmbuild/docker-compose.yml up -d
          background: true
          no_output_timeout: 2h
      - restore_cache:
          keys:
            - rpm-cache-{{ checksum "requirements.txt" }}-{{ checksum "SPECS/php7.spec" }}
            - rpm-cache-{{ checksum "requirements.txt" }}
            - rpm-cache-
      - run:
          name: Restore Repository
          command: |
            sleep 30
            if [ -d ~/el6/RPMS ]; then
              sudo chown -R centos:centos ~/el6/RPMS
              sudo docker cp -a ~/el6/RPMS rpmbuild_webrepo_1:/home/centos-6/rpmbuild/
            fi
            if [ -d ~/el7/RPMS ]; then
              sudo chown -R centos:centos ~/el7/RPMS
              docker cp -a ~/el7/RPMS rpmbuild_webrepo_1:/home/centos-7/rpmbuild/
            fi
      - run:
          name: Checkout Curl
          command: |
            git clone https://github.com/aursu/rpmbuild-curl.git
            cd rpmbuild-curl
            git checkout $CURL_VERSION
      - run:
          name: Build Curl
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:7-build \
            yum -q list --disablerepo=* --enablerepo custom libcurl-devel | grep -q $CURL_VERSION ||
            {
              docker pull aursu/curlbuild:el7
              docker-compose -f rpmbuild-curl/docker-compose.yml up centos7curlbuild
            }
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build \
            yum -q list --disablerepo=* --enablerepo custom libcurl-devel | grep -q $CURL_VERSION ||
            {
              docker pull aursu/curlbuild:el6
              docker-compose -f rpmbuild-curl/docker-compose.yml up centos6curlbuild
            }
      - run:
          name: Checkout PostgreSQL 9.6
          command: |
            git clone https://github.com/aursu/rpmbuild-postgresql.git
            cd rpmbuild-postgresql
            git checkout $POSTGRESQL_VERSION
      - run:
          name: Build PostgreSQL 9.6
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:7-build \
            yum -q list --disablerepo=* --enablerepo custom postgresql-devel | grep -q $POSTGRESQL_VERSION ||
            {
              docker pull aursu/pgbuild:el7
              docker-compose -f rpmbuild-postgresql/docker-compose.yml up postgresql7build
            }
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build \
            yum -q list --disablerepo=* --enablerepo custom postgresql-devel | grep -q $POSTGRESQL_VERSION ||
            {
              docker pull aursu/pgbuild:el6
              docker-compose -f rpmbuild-postgresql/docker-compose.yml up postgresql6build
            }
      - run:
          name: Checkout Apache 2.4
          command: |
            git clone https://github.com/aursu/rpmbuild-httpd-2.4.git
            cd rpmbuild-httpd-2.4
            git checkout $APACHE24_VERSION
      - run:
          name: Build Apache 2.4
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:7-build \
            yum -q list --disablerepo=* --enablerepo custom httpd-devel | grep -q $APACHE24_VERSION ||
            {
              docker pull aursu/ap24build:el7
              docker-compose -f rpmbuild-httpd-2.4/docker-compose.yml up centos7ap24build
            }
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build \
            yum -q list --disablerepo=* --enablerepo custom httpd-devel | grep -q $APACHE24_VERSION ||
            {
              docker pull aursu/ap24build:el6
              docker-compose -f rpmbuild-httpd-2.4/docker-compose.yml up centos6ap24build
            }
      - run:
          name: Checkout libsodium
          command: |
            git clone https://github.com/aursu/rpmbuild-sodium.git
            cd rpmbuild-sodium
            git checkout $SODIUM_VERSION
      - run:
          name: Build libsodium
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build \
            yum -q list --disablerepo=* --enablerepo custom libsodium-devel | grep -q $SODIUM_VERSION ||
            {
              docker-compose -f rpmbuild-sodium/docker-compose.yml build --no-cache
              docker-compose -f rpmbuild-sodium/docker-compose.yml up
            }
      - run:
          name: Checkout libargon2
          command: |
            git clone https://github.com/aursu/rpmbuild-argon2.git
            cd rpmbuild-argon2
            git checkout $ARGON2_VERSION
      - run:
          name: Build libargon2
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build \
            yum -q list --disablerepo=* --enablerepo custom libargon2-devel | grep -q $ARGON2_VERSION ||
            {
              docker-compose -f rpmbuild-argon2/docker-compose.yml build --no-cache
              docker-compose -f rpmbuild-argon2/docker-compose.yml up
            }
      - run:
          name: Build PHP Docker images
          command: |
            docker-compose -f docker-compose.el7.yml build --no-cache
            docker-compose build --no-cache
      - run:
          name: Build PHP 7.2 RPM packages
          command: |
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:7-build yum -q list --disablerepo=* --enablerepo custom php-devel | grep -q $PHP_VERSION ||
              docker-compose -f docker-compose.el7.yml up centos7php72 centos7php72rel
            docker run -ti --rm --net buildnet -u root aursu/rpmbuild:6-build yum -q list --disablerepo=* --enablerepo custom php-devel | grep -q $PHP_VERSION ||
              docker-compose up centos6php72 centos6php72rel
      - run:
          name: Copy RPM packages
          command: |
            sudo rm -rf ~/el6 ~/el7
            mkdir -p ~/el6 ~/el7
            docker cp rpmbuild_webrepo_1:/home/centos-6/rpmbuild/RPMS ~/el6/
            docker cp rpmbuild_webrepo_1:/home/centos-7/rpmbuild/RPMS ~/el7/
            sudo chown -R centos:centos ~/el6/RPMS ~/el7/RPMS
      - save_cache:
          key: rpm-cache-{{ checksum "requirements.txt" }}-{{ checksum "SPECS/php7.spec" }}
          paths:
            - ~/el6/RPMS
            - ~/el7/RPMS
      - run:
          name: Upload RPM packages into Bintray
          command: |
            docker-compose -f rpmbuild/docker-compose.bintray.yml pull
            docker-compose -f rpmbuild/docker-compose.bintray.yml run --rm \
              -e BINTRAY_USER=$BINTRAY_USER \
              -e BINTRAY_API_KEY=$BINTRAY_API_KEY \
              -e BINTRAY_REPO=$BINTRAY_REPO \
              -e PACKAGE_VCS_URL=$PACKAGE_VCS_URL centos7bintray
            docker-compose -f rpmbuild/docker-compose.bintray.yml run --rm \
              -e BINTRAY_USER=$BINTRAY_USER \
              -e BINTRAY_API_KEY=$BINTRAY_API_KEY \
              -e BINTRAY_REPO=$BINTRAY_REPO \
              -e PACKAGE_VCS_URL=$PACKAGE_VCS_URL centos6bintray
      - run:
          name: Deploy PHP 7.2 Docker images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push aursu/php72build:6-base
            docker push aursu/php72build:6-ap24base
            docker push aursu/php72build:el6
            docker push aursu/php72build:6-ap24
      - run:
          name: Build PHP Docker build images
          command: |
            sleep 30
            docker-compose -f docker-compose.build.yml build --no-cache
            docker push aursu/php72build:7-build
            docker push aursu/php72build:7-build-rel
            docker push aursu/php72build:6-build
            docker push aursu/php72build:6-build-rel
